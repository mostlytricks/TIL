# Object for datahandling

## DTO, VO, Entity? 
- [참고](https://www.youtube.com/watch?v=z5fUkck_RZM&t=1s)
- Entity는 DB와 직접 연결, 불변
- VO는 여러 테이블을 이용해서 데이터 값을 보여주기 위한 객체
  - setter쓰지말 것, 생성자를 이용해서만 값 초기화
  - getter외의 다양한 로직 구현 허용
  - hashcode(), equals()를 overriding해서 값이 동등할 경우 동일하다는 구현을 직접해줘야함!
  - A의 Money monye1 = 10000, B의 Money money2 =10000는 VO관점에서는 동등해야함
    - 그러나 객체간의 비교를 할경우, 주소가 다르기 때문에 다른 객체로 인식
  - 개인견해: Entity보다 한계층 위의, 값의 연산과 출력을 포함한 객체
  
- DTO는 이렇게 뽑아낸 값들을 정리해서, View Layer로 전달하기위한 trasfer 객체
  - View ~ Service간 소통
  - Getter, Setter만 허용 (!)
    - Setter가 있어야 view -> service 아닐까? 
    - 다시 Getter가 정의되어야 해당 객체에서 확인 필요한 값 사용이 가능
    

  
